name: CI/CD pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Testing:
    name: Unit testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: NodeJS Setup
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          # cache: 'npm'
      
      # - name: Install dependencies
      #   run: npm install

      - name: Frontend tests
        run: |
          cd frontend/ExpenzoX
          npm ci
          npm run test

      - name: Backend tests
        run: |
          cd backend
          npm ci
          npm run test
  
  Build-and-Push:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Build Backend Image
        run: |
          cd backend
          docker build -t expenzox-backend .
      
      - name: Build Frontend Image
        run: |
          cd frontend/ExpenzoX
          docker build -t expenzox-frontend .

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push to ECR
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITRY: expenzox-docker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag expenzox-frontend:latest $ECR_REGISTRY:frontend-$IMAGE_TAG
          docker tag expenzox-backend:latest $ECR_REGISTRY:backend-$IMAGE_TAG

          docker push $ECR_REGISTRY:backend-$IMAGE_TAG
          docker push $ECR_REGISTRY:frontend-$IMAGE_TAG




        
  

     
